{"version":3,"sources":["features/roller/index.module.css","features/roller/Intent.module.css","features/roller/images/black.png","features/roller/images/blackot.png","features/roller/images/blackst.png","features/roller/images/blacket.png","features/roller/images/blacko.png","features/roller/images/blacks.png","features/roller/images/white.png","features/roller/images/whitee.png","features/roller/images/whiteet.png","features/roller/images/whiteo.png","features/roller/images/whites.png","features/roller/images/whiteso.png","features/roller/images/whitest.png","features/roller/Intent.js","features/roller/reducer.js","features/roller/Dice.js","features/roller/Dices.js","features/roller/DicesBox.js","features/roller/Keep.js","features/roller/KeepExplosions.js","features/roller/Kept.js","features/roller/Result.js","features/roller/Distinction.js","features/roller/Adversity.js","features/roller/index.js","App.js","app/store.js","serviceWorker.js","index.js","features/roller/Dices.module.css"],"names":["module","exports","layout","labelCol","span","wrapperCol","tailLayout","Intent","completed","onFinish","values","initialValues","data","modifiers","filter","Boolean","Item","label","name","rules","required","message","disabled","min","max","Group","Button","value","valuePropName","type","htmlType","className","styles","submit","slice","createSlice","initialState","description","tn","ring","skill","dices","metadata","reducers","softReset","state","setParameters","action","payload","compromised","updateDices","setMetadata","actions","postOnServer","uri","request","callback","a","fetch","method","headers","Accept","body","JSON","stringify","response","includes","status","Error","json","console","error","reroll","roll","positions","modifier","dispatch","parameters","keep","selectAll","getImage","opportunity","strife","success","explosion","explosionStrifeSkill","explosionSkill","successOpportunitySkill","successStrifeSkill","successSkill","opportunitySkill","blankSkill","strifeExplosionRing","strifeSuccessRing","strifeOpportunityRing","successRing","opportunityRing","blankRing","Dice","dice","text","join","getText","src","alt","title","preview","Dices","length","listData","map","index","key","toString","selectable","selected","toggle","grid","gutter","column","dataSource","renderItem","classNames","unselectable","rerolled","onClick","undefined","Paragraph","Typography","DicesBox","footer","Keep","trulyCompromised","useState","toKeep","setToKeep","canKeep","available","i","KeepExplosions","Kept","Text","Result","count","reduce","acc","target","strong","Distinction","toReroll","setToReroll","Adversity","successDices","Math","Roller","useSelector","useDispatch","dicesRolled","atLeastOneUnresolvedDice","some","keptDices","atLeastOneKeptDice","rerollDone","rerolls","every","App","configureStore","reducer","rollerReducer","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac9a9c01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"roller_layout__2TyHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"Intent_submit__3pMAY\"};","module.exports = __webpack_public_path__ + \"static/media/black.f14fed51.png\";","module.exports = __webpack_public_path__ + \"static/media/blackot.3a5ad7bb.png\";","module.exports = __webpack_public_path__ + \"static/media/blackst.3fad8195.png\";","module.exports = __webpack_public_path__ + \"static/media/blacket.f0ca3076.png\";","module.exports = __webpack_public_path__ + \"static/media/blacko.e44a1dd0.png\";","module.exports = __webpack_public_path__ + \"static/media/blacks.216d4546.png\";","module.exports = __webpack_public_path__ + \"static/media/white.c24c0c51.png\";","module.exports = __webpack_public_path__ + \"static/media/whitee.7755ca79.png\";","module.exports = __webpack_public_path__ + \"static/media/whiteet.d10cd0cc.png\";","module.exports = __webpack_public_path__ + \"static/media/whiteo.1e81fee0.png\";","module.exports = __webpack_public_path__ + \"static/media/whites.7cb9db03.png\";","module.exports = __webpack_public_path__ + \"static/media/whiteso.f76a057b.png\";","module.exports = __webpack_public_path__ + \"static/media/whitest.05051e66.png\";","import React from \"react\";\nimport { Form, Input, InputNumber, Button, Radio, Switch } from \"antd\";\nimport styles from \"./Intent.module.css\";\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nconst tailLayout = {\n  labelCol: { span: 0 },\n  wrapperCol: { span: 24 },\n};\n\nconst Intent = ({ completed, onFinish, values }) => {\n  return (\n    <Form\n      {...layout}\n      initialValues={values}\n      onFinish={(data) => {\n        onFinish({\n          ...data,\n          modifiers: [\n            data[\"modifier\"],\n            data[\"compromised\"] && \"compromised\",\n          ].filter(Boolean),\n        });\n      }}\n    >\n      <Form.Item\n        label=\"Description\"\n        name=\"description\"\n        rules={[{ required: true, message: \"Roll description is required\" }]}\n      >\n        <Input disabled={completed} />\n      </Form.Item>\n      <Form.Item label=\"TN\" name=\"tn\" rules={[{ required: true }]}>\n        <InputNumber disabled={completed} min={1} />\n      </Form.Item>\n      <Form.Item label=\"Ring\" name=\"ring\" rules={[{ required: true }]}>\n        <InputNumber disabled={completed} min={1} max={5} />\n      </Form.Item>\n      <Form.Item label=\"Skill\" name=\"skill\" rules={[{ required: true }]}>\n        <InputNumber disabled={completed} min={0} max={5} />\n      </Form.Item>\n      <Form.Item label=\"Modifier\" name=\"modifier\">\n        <Radio.Group disabled={completed}>\n          <Radio.Button value=\"none\">None</Radio.Button>\n          <Radio.Button value=\"distinction\">Distinction</Radio.Button>\n          <Radio.Button value=\"adversity\">Adversity</Radio.Button>\n        </Radio.Group>\n      </Form.Item>\n      <Form.Item\n        label=\"Compromised?\"\n        name=\"compromised\"\n        valuePropName=\"checked\"\n      >\n        <Switch disabled={completed} />\n      </Form.Item>\n      {!completed && (\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" className={styles.submit}>\n            Roll\n          </Button>\n        </Form.Item>\n      )}\n    </Form>\n  );\n};\n\nexport default Intent;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  description: \"Example\",\n  tn: 2,\n  ring: 2,\n  skill: 2,\n  modifiers: [],\n  dices: [],\n  metadata: {},\n};\n\nconst slice = createSlice({\n  name: \"roll\",\n  initialState,\n  reducers: {\n    softReset: (state) => {\n      state.dices = [];\n      state.metadata = {};\n    },\n    setParameters: (state, action) => {\n      const {\n        description,\n        tn,\n        ring,\n        skill,\n        modifiers,\n        compromised,\n      } = action.payload;\n      state.description = description;\n      state.tn = tn;\n      state.ring = ring;\n      state.skill = skill;\n      state.modifiers = modifiers;\n      state.compromised = compromised;\n    },\n    updateDices: (state, action) => {\n      state.dices = action.payload;\n    },\n    setMetadata: (state, action) => {\n      state.metadata = action.payload;\n    },\n  },\n});\n\nconst { setParameters, updateDices, setMetadata } = slice.actions;\nexport const { softReset } = slice.actions;\n\nconst serverRoot =\n  process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://127.0.0.1:8000/api\";\n\nconst genericError = () => {\n  console.error(\"TODO\");\n};\n\nconst postOnServer = async (uri, request, callback) => {\n  try {\n    const response = await fetch(`${serverRoot}${uri}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(request),\n    });\n    if (![200, 201, 204].includes(response.status)) {\n      throw new Error();\n    }\n    const data = await response.json();\n    callback(data);\n  } catch (_) {\n    genericError();\n  }\n};\n\nexport const create = (request) => (dispatch) => {\n  dispatch(setParameters(request));\n\n  const { tn, ring, skill, modifiers } = request;\n  postOnServer(\n    \"/public/ffg/l5r/rolls/create\",\n    {\n      tn,\n      ring,\n      skill,\n      modifiers,\n    },\n    (data) => {\n      dispatch(updateDices(data[\"dices\"]));\n    }\n  );\n};\n\nexport const reroll = (roll, positions, modifier) => (dispatch) => {\n  const { tn, ring, skill, modifiers, dices } = roll;\n  postOnServer(\n    \"/public/ffg/l5r/rolls/reroll\",\n    {\n      roll: {\n        parameters: { tn, ring, skill, modifiers },\n        dices,\n      },\n      positions,\n      modifier,\n    },\n    (data) => {\n      dispatch(updateDices(data[\"dices\"]));\n      dispatch(setMetadata(data[\"metadata\"]));\n    }\n  );\n};\n\nexport const keep = (roll, positions) => (dispatch) => {\n  const { tn, ring, skill, modifiers, dices, metadata } = roll;\n  postOnServer(\n    \"/public/ffg/l5r/rolls/keep\",\n    {\n      roll: {\n        parameters: { tn, ring, skill, modifiers },\n        dices,\n        metadata,\n      },\n      positions,\n    },\n    (data) => {\n      dispatch(updateDices(data[\"dices\"]));\n    }\n  );\n};\n\nexport const selectAll = (state) => state.roll;\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { Image } from \"antd\";\nimport blankRing from \"./images/black.png\";\nimport strifeOpportunityRing from \"./images/blackot.png\";\nimport strifeSuccessRing from \"./images/blackst.png\";\nimport strifeExplosionRing from \"./images/blacket.png\";\nimport opportunityRing from \"./images/blacko.png\";\nimport successRing from \"./images/blacks.png\";\nimport blankSkill from \"./images/white.png\";\nimport explosionSkill from \"./images/whitee.png\";\nimport explosionStrifeSkill from \"./images/whiteet.png\";\nimport opportunitySkill from \"./images/whiteo.png\";\nimport successSkill from \"./images/whites.png\";\nimport successOpportunitySkill from \"./images/whiteso.png\";\nimport successStrifeSkill from \"./images/whitest.png\";\n\nconst getImage = ({\n  type,\n  value: { opportunity, strife, success, explosion },\n}) => {\n  if (type === \"skill\") {\n    if (explosion) {\n      if (strife) {\n        return explosionStrifeSkill;\n      }\n      return explosionSkill;\n    }\n\n    if (success) {\n      if (opportunity) {\n        return successOpportunitySkill;\n      }\n      if (strife) {\n        return successStrifeSkill;\n      }\n      return successSkill;\n    }\n\n    if (opportunity) {\n      return opportunitySkill;\n    }\n\n    return blankSkill;\n  }\n\n  if (strife) {\n    if (explosion) {\n      return strifeExplosionRing;\n    }\n    if (success) {\n      return strifeSuccessRing;\n    }\n    return strifeOpportunityRing;\n  }\n\n  if (success) {\n    return successRing;\n  }\n  if (opportunity) {\n    return opportunityRing;\n  }\n\n  return blankRing;\n};\n\nconst getText = ({ value: { opportunity, strife, success, explosion } }) => {\n  return (\n    [\n      opportunity && `Opportunity: ${opportunity}`,\n      success && `Success: ${success}`,\n      explosion && `Explosion: ${explosion}`,\n      strife && `Strife: ${strife}`,\n    ]\n      .filter(Boolean)\n      .join(\"; \") || \"Nothing\"\n  );\n};\n\nconst Dice = ({ dice }) => {\n  const text = getText(dice);\n  return <Image src={getImage(dice)} alt={text} title={text} preview={false} />;\n};\n\nexport default Dice;\n","import React from \"react\";\nimport { List } from \"antd\";\nimport styles from \"./Dices.module.css\";\nimport classNames from \"classnames\";\nimport Dice from \"./Dice\";\n\nconst Dices = ({ dices }) => {\n  if (!dices?.length) {\n    return null;\n  }\n\n  const listData = dices.map((dice, index) => {\n    return {\n      key: index.toString(),\n      dice,\n      selectable: dice.selectable,\n      selected: dice.selected,\n      toggle: dice.toggle,\n      disabled: dice.disabled,\n    };\n  });\n\n  return (\n    <List\n      grid={{ gutter: 0, column: 10 }}\n      dataSource={listData}\n      renderItem={({ key, dice, selectable, selected, toggle, disabled }) => (\n        <List.Item\n          key={key}\n          className={classNames(styles.dice, {\n            [styles.selectable]: selectable,\n            [styles.selected]: selected,\n            [styles.unselectable]: disabled,\n            [styles.rerolled]: dice.status === \"rerolled\",\n          })}\n          onClick={selectable ? toggle : undefined}\n        >\n          <Dice dice={dice} />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default Dices;\n","import React from \"react\";\nimport Dices from \"./Dices\";\nimport { Typography } from \"antd\";\n\nconst { Paragraph } = Typography;\n\nconst DicesBox = ({ dices, text, footer }) => {\n  return (\n    <div>\n      <Paragraph>{text}</Paragraph>\n      <Dices dices={dices} />\n      {footer}\n    </div>\n  );\n};\n\nexport default DicesBox;\n","import React, { useState } from \"react\";\nimport DicesBox from \"./DicesBox\";\nimport { Button } from \"antd\";\n\nconst Keep = ({ dices, max, onFinish, compromised, trulyCompromised }) => {\n  const [toKeep, setToKeep] = useState([]);\n\n  const canKeep = max > toKeep.length;\n  const toggle = (index) => {\n    if (toKeep.includes(index)) {\n      return setToKeep(toKeep.filter((i) => i !== index));\n    }\n    return setToKeep([...toKeep, index]);\n  };\n  const text = trulyCompromised\n    ? \"You cannot keep any dice due to being compromised.\"\n    : `You can choose up to ${max} dice${max > 1 ? \"s\" : \"\"} to keep (min 1).`;\n\n  return (\n    <DicesBox\n      text={text}\n      dices={dices.map((dice, index) => {\n        const selected = toKeep.includes(index);\n        const available =\n          dice.status === \"pending\" && (!compromised || !dice.value.strife);\n        const selectable = (selected || canKeep) && available;\n        return {\n          ...dice,\n          selectable,\n          selected,\n          disabled: !selectable,\n          toggle: () => toggle(index),\n        };\n      })}\n      footer={\n        (toKeep.length >= 1 || trulyCompromised) && (\n          <Button type=\"primary\" onClick={() => onFinish(toKeep)}>\n            Continue\n          </Button>\n        )\n      }\n    />\n  );\n};\n\nexport default Keep;\n","import React, { useState } from \"react\";\nimport DicesBox from \"./DicesBox\";\nimport { Button } from \"antd\";\n\nconst KeepExplosions = ({ dices, onFinish, compromised }) => {\n  const [toKeep, setToKeep] = useState([]);\n  const toggle = (index) => {\n    if (toKeep.includes(index)) {\n      return setToKeep(toKeep.filter((i) => i !== index));\n    }\n    return setToKeep([...toKeep, index]);\n  };\n\n  return (\n    <DicesBox\n      text={`Select which explosions you wish to keep (if any):`}\n      dices={dices.map((dice, index) => {\n        const available =\n          dice.status === \"pending\" && (!compromised || !dice.value.strife);\n\n        return {\n          ...dice,\n          selectable: available,\n          selected: dice.status === \"kept\" || toKeep.includes(index),\n          disabled: !available && dice.status !== \"kept\",\n          toggle: () => toggle(index),\n        };\n      })}\n      footer={\n        <Button type=\"primary\" onClick={() => onFinish(toKeep)}>\n          Continue\n        </Button>\n      }\n    />\n  );\n};\n\nexport default KeepExplosions;\n","import React from \"react\";\nimport DicesBox from \"./DicesBox\";\n\nconst Kept = ({ dices, trulyCompromised }) => {\n  const text = trulyCompromised\n    ? \"You couldn't keep any dice due to being compromised.\"\n    : \"You have kept:\";\n\n  return (\n    <DicesBox\n      text={text}\n      dices={dices.map((dice) => {\n        const selected = dice.status === \"kept\";\n        return {\n          ...dice,\n          disabled: !selected,\n          selected,\n        };\n      })}\n    />\n  );\n};\n\nexport default Kept;\n","import React from \"react\";\nimport { Typography, List } from \"antd\";\n\nconst { Text } = Typography;\n\nconst Result = ({ dices, tn }) => {\n  const data = [\n    {\n      type: \"Successes\",\n      count: dices.reduce(\n        (acc, dice) =>\n          acc + (dice.value.explosion || 0) + (dice.value.success || 0),\n        0\n      ),\n      target: tn,\n    },\n    {\n      type: \"Strifes\",\n      count: dices.reduce((acc, dice) => acc + (dice.value.strife || 0), 0),\n    },\n    {\n      type: \"Opportunities\",\n      count: dices.reduce(\n        (acc, dice) => acc + (dice.value.opportunity || 0),\n        0\n      ),\n    },\n  ];\n\n  return (\n    <List\n      grid={{ gutter: 16, column: 3 }}\n      dataSource={data}\n      renderItem={({ type, count, target }) => (\n        <List.Item>\n          <Text\n            strong\n            type={target && (count >= target ? \"success\" : \"warning\")}\n          >{`${type}: ${count}`}</Text>\n          {target && <Text>{` (required: ${target})`}</Text>}\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport DicesBox from \"./DicesBox\";\nimport { Button } from \"antd\";\n\nconst Distinction = ({ dices, onFinish }) => {\n  const [toReroll, setToReroll] = useState([]);\n  const max = 2;\n  const toggle = (index) => {\n    if (toReroll.includes(index)) {\n      return setToReroll(toReroll.filter((i) => i !== index));\n    }\n    return setToReroll([...toReroll, index]);\n  };\n\n  return (\n    <DicesBox\n      text={`You can choose up to ${max} dices to reroll.`}\n      dices={dices.map((dice, index) => {\n        const selected = toReroll.includes(index);\n        const selectable = selected || toReroll.length < max;\n        return {\n          ...dice,\n          selectable,\n          selected,\n          disabled: !selectable,\n          toggle: () => toggle(index),\n        };\n      })}\n      footer={\n        <Button type=\"primary\" onClick={() => onFinish(toReroll)}>\n          Continue\n        </Button>\n      }\n    />\n  );\n};\n\nexport default Distinction;\n","import React, { useState } from \"react\";\nimport DicesBox from \"./DicesBox\";\nimport { Button } from \"antd\";\n\nconst Adversity = ({ dices, onFinish }) => {\n  const [toReroll, setToReroll] = useState([]);\n  const successDices = dices.filter(\n    ({ value }) => value.success || value.explosion\n  );\n  const max = 2;\n  const min = Math.min(max, successDices.length);\n  const toggle = (index) => {\n    if (toReroll.includes(index)) {\n      return setToReroll(toReroll.filter((i) => i !== index));\n    }\n    return setToReroll([...toReroll, index]);\n  };\n\n  return (\n    <DicesBox\n      text={`You must reroll two success dices (if possible).`}\n      dices={dices.map((dice, index) => {\n        const selected = toReroll.includes(index);\n        const isSuccess = dice.value.success || dice.value.explosion;\n        const selectable = isSuccess && (selected || toReroll.length < max);\n        return {\n          ...dice,\n          selectable,\n          selected,\n          disabled: !selectable,\n          toggle: () => toggle(index),\n        };\n      })}\n      footer={\n        toReroll.length >= min && (\n          <Button type=\"primary\" onClick={() => onFinish(toReroll)}>\n            Continue\n          </Button>\n        )\n      }\n    />\n  );\n};\n\nexport default Adversity;\n","import React from \"react\";\nimport styles from \"./index.module.css\";\nimport Intent from \"./Intent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectAll, create, softReset, keep, reroll } from \"./reducer\";\nimport { Button, Card } from \"antd\";\nimport Keep from \"./Keep\";\nimport KeepExplosions from \"./KeepExplosions\";\nimport Kept from \"./Kept\";\nimport Result from \"./Result\";\nimport Distinction from \"./Distinction\";\nimport Adversity from \"./Adversity\";\n\nconst Roller = () => {\n  const roll = useSelector(selectAll);\n  const dispatch = useDispatch();\n\n  const { dices, tn, metadata, modifiers, ring, compromised } = roll;\n\n  const dicesRolled = dices.length > 0;\n  const atLeastOneUnresolvedDice =\n    dicesRolled && dices.some((dice) => dice.status === \"pending\");\n  const keptDices = dices.filter((dice) => dice.status === \"kept\");\n  const atLeastOneKeptDice = keptDices.length > 0;\n  const rerollDone =\n    metadata?.rerolls?.length ||\n    !(modifiers.includes(\"adversity\") || modifiers.includes(\"distinction\"));\n  const trulyCompromised =\n    compromised &&\n    dicesRolled &&\n    rerollDone &&\n    !atLeastOneKeptDice &&\n    dices\n      .filter((dice) => dice.status === \"pending\")\n      .every((dice) => dice.value.strife);\n\n  return (\n    <div className={styles.layout}>\n      <Card>\n        <Intent\n          completed={dicesRolled}\n          onFinish={(data) => dispatch(create({ ...roll, ...data }))}\n          values={roll}\n        />\n        {dicesRolled && (\n          <>\n            {!rerollDone && (\n              <>\n                {modifiers.includes(\"distinction\") && (\n                  <Distinction\n                    dices={dices}\n                    onFinish={(positions) =>\n                      dispatch(reroll(roll, positions, \"distinction\"))\n                    }\n                  />\n                )}\n                {modifiers.includes(\"adversity\") && (\n                  <Adversity\n                    dices={dices}\n                    onFinish={(positions) =>\n                      dispatch(reroll(roll, positions, \"adversity\"))\n                    }\n                  />\n                )}\n              </>\n            )}\n            {rerollDone && (\n              <>\n                {atLeastOneUnresolvedDice ? (\n                  <>\n                    {!atLeastOneKeptDice && (\n                      <Keep\n                        dices={dices}\n                        max={ring}\n                        onFinish={(data) => dispatch(keep(roll, data))}\n                        compromised={compromised}\n                        trulyCompromised={trulyCompromised}\n                      />\n                    )}\n                    {atLeastOneKeptDice && (\n                      <KeepExplosions\n                        dices={dices}\n                        onFinish={(data) => dispatch(keep(roll, data))}\n                        compromised={compromised}\n                      />\n                    )}\n                  </>\n                ) : (\n                  <>\n                    <Kept dices={dices} trulyCompromised={trulyCompromised} />\n                    <Result dices={keptDices} tn={tn} />\n                    <Button\n                      type=\"primary\"\n                      onClick={() => dispatch(softReset())}\n                    >\n                      Reroll\n                    </Button>\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default Roller;\n","import React from \"react\";\nimport \"./App.css\";\nimport Roller from \"./features/roller\";\n\nconst App = () => {\n  return <Roller />;\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rollerReducer from \"../features/roller/reducer\";\n\nexport default configureStore({\n  reducer: {\n    roll: rollerReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dice\":\"Dices_dice__cqowQ\",\"selectable\":\"Dices_selectable__2UH3q\",\"selected\":\"Dices_selected__1Gb1I\",\"unselectable\":\"Dices_unselectable__KQSGp\",\"rerolled\":\"Dices_rerolled__2e0qS\"};"],"sourceRoot":""}