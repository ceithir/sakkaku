{"version":3,"sources":["features/roller/index.module.css","features/roller/Intent.module.css","features/roller/images/black.png","features/roller/images/blackot.png","features/roller/images/blackst.png","features/roller/images/blacket.png","features/roller/images/blacko.png","features/roller/images/blacks.png","features/roller/images/white.png","features/roller/images/whitee.png","features/roller/images/whiteet.png","features/roller/images/whiteo.png","features/roller/images/whites.png","features/roller/images/whiteso.png","features/roller/images/whitest.png","features/roller/Intent.js","features/roller/server.js","features/roller/reducer.js","features/roller/Dice.js","features/roller/Dices.js","features/roller/DicesBox.js","features/roller/Keep.js","features/roller/KeepExplosions.js","features/roller/Kept.js","features/roller/Result.js","features/roller/Distinction.js","features/roller/Adversity.js","features/roller/index.js","App.js","app/store.js","serviceWorker.js","index.js","features/roller/Dices.module.css"],"names":["module","exports","layout","labelCol","span","wrapperCol","tailLayout","Intent","completed","onFinish","values","initialValues","Item","label","name","rules","required","message","disabled","min","max","Group","Button","value","valuePropName","type","htmlType","className","styles","submit","ringDie","opportunity","strife","success","explosion","skillDie","rollDice","dice","Math","floor","random","length","rollSameDice","status","rollDices","ring","skill","Array","map","create","roll","a","dices","keep","toKeep","index","includes","filter","reroll","toReroll","rerolled","_","slice","createSlice","initialState","description","tn","modifier","compromised","reducers","set","state","action","payload","softReset","actions","request","dispatch","keepOnServer","then","response","rerollOnServer","selectAll","getImage","explosionStrifeSkill","explosionSkill","successOpportunitySkill","successStrifeSkill","successSkill","opportunitySkill","blankSkill","strifeExplosionRing","strifeSuccessRing","strifeOpportunityRing","successRing","opportunityRing","blankRing","Dice","text","Boolean","join","getText","src","alt","title","preview","Dices","listData","key","toString","selectable","selected","toggle","grid","gutter","column","dataSource","renderItem","classNames","unselectable","onClick","undefined","Paragraph","Typography","DicesBox","footer","Keep","useState","setToKeep","canKeep","available","i","KeepExplosions","Kept","trulyCompromised","Text","Result","data","count","reduce","acc","target","strong","Distinction","setToReroll","Adversity","successDices","Roller","useSelector","useDispatch","dicesRolled","atLeastOneUnresolvedDice","some","keptDices","atLeastOneKeptDice","rerollDone","every","createOnServer","App","configureStore","reducer","rollerReducer","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f9742b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"roller_layout__2TyHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"Intent_submit__3pMAY\"};","module.exports = __webpack_public_path__ + \"static/media/black.f14fed51.png\";","module.exports = __webpack_public_path__ + \"static/media/blackot.3a5ad7bb.png\";","module.exports = __webpack_public_path__ + \"static/media/blackst.3fad8195.png\";","module.exports = __webpack_public_path__ + \"static/media/blacket.f0ca3076.png\";","module.exports = __webpack_public_path__ + \"static/media/blacko.e44a1dd0.png\";","module.exports = __webpack_public_path__ + \"static/media/blacks.216d4546.png\";","module.exports = __webpack_public_path__ + \"static/media/white.c24c0c51.png\";","module.exports = __webpack_public_path__ + \"static/media/whitee.7755ca79.png\";","module.exports = __webpack_public_path__ + \"static/media/whiteet.d10cd0cc.png\";","module.exports = __webpack_public_path__ + \"static/media/whiteo.1e81fee0.png\";","module.exports = __webpack_public_path__ + \"static/media/whites.7cb9db03.png\";","module.exports = __webpack_public_path__ + \"static/media/whiteso.f76a057b.png\";","module.exports = __webpack_public_path__ + \"static/media/whitest.05051e66.png\";","import React from \"react\";\nimport { Form, Input, InputNumber, Button, Radio, Switch } from \"antd\";\nimport styles from \"./Intent.module.css\";\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nconst tailLayout = {\n  labelCol: { span: 0 },\n  wrapperCol: { span: 24 },\n};\n\nconst Intent = ({ completed, onFinish, values }) => {\n  return (\n    <Form {...layout} initialValues={values} onFinish={onFinish}>\n      <Form.Item\n        label=\"Description\"\n        name=\"description\"\n        rules={[{ required: true, message: \"Roll description is required\" }]}\n      >\n        <Input disabled={completed} />\n      </Form.Item>\n      <Form.Item label=\"TN\" name=\"tn\" rules={[{ required: true }]}>\n        <InputNumber disabled={completed} min={1} />\n      </Form.Item>\n      <Form.Item label=\"Ring\" name=\"ring\" rules={[{ required: true }]}>\n        <InputNumber disabled={completed} min={1} max={5} />\n      </Form.Item>\n      <Form.Item label=\"Skill\" name=\"skill\" rules={[{ required: true }]}>\n        <InputNumber disabled={completed} min={0} max={5} />\n      </Form.Item>\n      <Form.Item label=\"Modifier\" name=\"modifier\">\n        <Radio.Group disabled={completed}>\n          <Radio.Button value=\"none\">None</Radio.Button>\n          <Radio.Button value=\"distinction\">Distinction</Radio.Button>\n          <Radio.Button value=\"adversity\">Adversity</Radio.Button>\n        </Radio.Group>\n      </Form.Item>\n      <Form.Item\n        label=\"Compromised?\"\n        name=\"compromised\"\n        valuePropName=\"checked\"\n      >\n        <Switch disabled={completed} />\n      </Form.Item>\n      {!completed && (\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" className={styles.submit}>\n            Roll\n          </Button>\n        </Form.Item>\n      )}\n    </Form>\n  );\n};\n\nexport default Intent;\n","const ringDie = [\n  {},\n  { opportunity: 1, strife: 1 },\n  { opportunity: 1 },\n  { success: 1, strife: 1 },\n  { success: 1 },\n  { explosion: 1, strife: 1 },\n];\n\nconst skillDie = [\n  {},\n  {},\n  { opportunity: 1 },\n  { opportunity: 1 },\n  { opportunity: 1 },\n  { success: 1, strife: 1 },\n  { success: 1, strife: 1 },\n  { success: 1 },\n  { success: 1 },\n  { success: 1, opportunity: 1 },\n  { explosion: 1, strife: 1 },\n  { explosion: 1 },\n];\n\nconst rollDice = (dice) => {\n  return dice[Math.floor(Math.random() * dice.length)];\n};\n\nconst rollSameDice = ({ type }) => {\n  return {\n    type,\n    value: rollDice(type === \"skill\" ? skillDie : ringDie),\n    status: \"pending\",\n  };\n};\n\nconst rollDices = ({ ring, skill }) => {\n  return [\n    ...[...Array(ring)].map(() => {\n      return { type: \"ring\", value: rollDice(ringDie), status: \"pending\" };\n    }),\n    ...[...Array(skill)].map(() => {\n      return { type: \"skill\", value: rollDice(skillDie), status: \"pending\" };\n    }),\n  ];\n};\n\n// Will do an actual server call in real life\n// Fow now actually handle the whole logic there\n// Without all the important validations\n\nexport const create = async (roll) => {\n  return {\n    ...roll,\n    dices: rollDices(roll),\n  };\n};\n\nexport const keep = async (roll, toKeep) => {\n  return {\n    ...roll,\n    dices: [\n      ...roll.dices.map((dice, index) => {\n        return {\n          ...dice,\n          status:\n            dice.status === \"pending\"\n              ? toKeep.includes(index)\n                ? \"kept\"\n                : \"dropped\"\n              : dice.status,\n        };\n      }),\n      ...roll.dices\n        .filter(\n          (dice, index) =>\n            dice.status === \"pending\" &&\n            toKeep.includes(index) &&\n            dice.value.explosion\n        )\n        .map((dice) => rollSameDice(dice)),\n    ],\n  };\n};\n\nexport const reroll = async (roll, toReroll) => {\n  return {\n    ...roll,\n    rerolled: true,\n    dices: [\n      ...roll.dices.map((dice, index) => {\n        if (!toReroll.includes(index)) {\n          return dice;\n        }\n\n        return {\n          ...dice,\n          status: \"rerolled\",\n        };\n      }),\n      ...roll.dices\n        .filter((_, index) => toReroll.includes(index))\n        .map((dice) => rollSameDice(dice)),\n    ],\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  create as createOnServer,\n  keep as keepOnServer,\n  reroll as rerollOnServer,\n} from \"./server\";\n\nconst initialState = {\n  description: \"Example\",\n  tn: 2,\n  ring: 2,\n  skill: 2,\n  modifier: \"none\",\n  compromised: false,\n  dices: [],\n  rerolled: false,\n};\n\nconst slice = createSlice({\n  name: \"roll\",\n  initialState,\n  reducers: {\n    set: (state, action) => {\n      const {\n        description,\n        tn,\n        ring,\n        skill,\n        modifier,\n        dices,\n        rerolled,\n        compromised,\n      } = action.payload;\n      state.description = description;\n      state.tn = tn;\n      state.ring = ring;\n      state.skill = skill;\n      state.modifier = modifier;\n      state.compromised = compromised;\n\n      state.dices = dices;\n      state.rerolled = rerolled;\n    },\n    softReset: (state) => {\n      state.dices = [];\n      state.rerolled = false;\n    },\n  },\n});\n\nconst { set } = slice.actions;\nexport const { softReset } = slice.actions;\n\nexport const create = (request) => (dispatch) => {\n  createOnServer(request).then((response) => {\n    dispatch(set(response));\n  });\n};\n\nexport const keep = (roll, request) => (dispatch) => {\n  keepOnServer(roll, request).then((response) => {\n    dispatch(set(response));\n  });\n};\n\nexport const reroll = (roll, request) => (dispatch) => {\n  rerollOnServer(roll, request).then((response) => {\n    dispatch(set(response));\n  });\n};\n\nexport const selectAll = (state) => state.roll;\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { Image } from \"antd\";\nimport blankRing from \"./images/black.png\";\nimport strifeOpportunityRing from \"./images/blackot.png\";\nimport strifeSuccessRing from \"./images/blackst.png\";\nimport strifeExplosionRing from \"./images/blacket.png\";\nimport opportunityRing from \"./images/blacko.png\";\nimport successRing from \"./images/blacks.png\";\nimport blankSkill from \"./images/white.png\";\nimport explosionSkill from \"./images/whitee.png\";\nimport explosionStrifeSkill from \"./images/whiteet.png\";\nimport opportunitySkill from \"./images/whiteo.png\";\nimport successSkill from \"./images/whites.png\";\nimport successOpportunitySkill from \"./images/whiteso.png\";\nimport successStrifeSkill from \"./images/whitest.png\";\n\nconst getImage = ({\n  type,\n  value: { opportunity, strife, success, explosion },\n}) => {\n  if (type === \"skill\") {\n    if (explosion) {\n      if (strife) {\n        return explosionStrifeSkill;\n      }\n      return explosionSkill;\n    }\n\n    if (success) {\n      if (opportunity) {\n        return successOpportunitySkill;\n      }\n      if (strife) {\n        return successStrifeSkill;\n      }\n      return successSkill;\n    }\n\n    if (opportunity) {\n      return opportunitySkill;\n    }\n\n    return blankSkill;\n  }\n\n  if (strife) {\n    if (explosion) {\n      return strifeExplosionRing;\n    }\n    if (success) {\n      return strifeSuccessRing;\n    }\n    return strifeOpportunityRing;\n  }\n\n  if (success) {\n    return successRing;\n  }\n  if (opportunity) {\n    return opportunityRing;\n  }\n\n  return blankRing;\n};\n\nconst getText = ({ value: { opportunity, strife, success, explosion } }) => {\n  return (\n    [\n      opportunity && `Opportunity: ${opportunity}`,\n      success && `Success: ${success}`,\n      explosion && `Explosion: ${explosion}`,\n      strife && `Strife: ${strife}`,\n    ]\n      .filter(Boolean)\n      .join(\"; \") || \"Nothing\"\n  );\n};\n\nconst Dice = ({ dice }) => {\n  const text = getText(dice);\n  return <Image src={getImage(dice)} alt={text} title={text} preview={false} />;\n};\n\nexport default Dice;\n","import React from \"react\";\nimport { List } from \"antd\";\nimport styles from \"./Dices.module.css\";\nimport classNames from \"classnames\";\nimport Dice from \"./Dice\";\n\nconst Dices = ({ dices }) => {\n  if (!dices?.length) {\n    return null;\n  }\n\n  const listData = dices.map((dice, index) => {\n    return {\n      key: index.toString(),\n      dice,\n      selectable: dice.selectable,\n      selected: dice.selected,\n      toggle: dice.toggle,\n      disabled: dice.disabled,\n    };\n  });\n\n  return (\n    <List\n      grid={{ gutter: 0, column: 10 }}\n      dataSource={listData}\n      renderItem={({ key, dice, selectable, selected, toggle, disabled }) => (\n        <List.Item\n          key={key}\n          className={classNames(styles.dice, {\n            [styles.selectable]: selectable,\n            [styles.selected]: selected,\n            [styles.unselectable]: disabled,\n            [styles.rerolled]: dice.status === \"rerolled\",\n          })}\n          onClick={selectable ? toggle : undefined}\n        >\n          <Dice dice={dice} />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default Dices;\n","import React from \"react\";\nimport Dices from \"./Dices\";\nimport { Typography } from \"antd\";\n\nconst { Paragraph } = Typography;\n\nconst DicesBox = ({ dices, text, footer }) => {\n  return (\n    <div>\n      <Paragraph>{text}</Paragraph>\n      <Dices dices={dices} />\n      {footer}\n    </div>\n  );\n};\n\nexport default DicesBox;\n","import React, { useState } from \"react\";\nimport DicesBox from \"./DicesBox\";\nimport { Button } from \"antd\";\n\nconst Keep = ({ dices, max, onFinish, compromised }) => {\n  const [toKeep, setToKeep] = useState([]);\n\n  const canKeep = max > toKeep.length;\n  const toggle = (index) => {\n    if (toKeep.includes(index)) {\n      return setToKeep(toKeep.filter((i) => i !== index));\n    }\n    return setToKeep([...toKeep, index]);\n  };\n  const text = `You can choose up to ${max} dice${\n    max > 1 ? \"s\" : \"\"\n  } to keep (min 1).`;\n\n  return (\n    <DicesBox\n      text={text}\n      dices={dices.map((dice, index) => {\n        const selected = toKeep.includes(index);\n        const available =\n          dice.status === \"pending\" && (!compromised || !dice.value.strife);\n        const selectable = (selected || canKeep) && available;\n        return {\n          ...dice,\n          selectable,\n          selected,\n          disabled: !selectable,\n          toggle: () => toggle(index),\n        };\n      })}\n      footer={\n        toKeep.length >= 1 && (\n          <Button type=\"primary\" onClick={() => onFinish(toKeep)}>\n            Continue\n          </Button>\n        )\n      }\n    />\n  );\n};\n\nexport default Keep;\n","import React, { useState } from \"react\";\nimport DicesBox from \"./DicesBox\";\nimport { Button } from \"antd\";\n\nconst KeepExplosions = ({ dices, onFinish, compromised }) => {\n  const [toKeep, setToKeep] = useState([]);\n  const toggle = (index) => {\n    if (toKeep.includes(index)) {\n      return setToKeep(toKeep.filter((i) => i !== index));\n    }\n    return setToKeep([...toKeep, index]);\n  };\n\n  return (\n    <DicesBox\n      text={`Select which explosions you wish to keep (if any):`}\n      dices={dices.map((dice, index) => {\n        const available =\n          dice.status === \"pending\" && (!compromised || !dice.value.strife);\n\n        return {\n          ...dice,\n          selectable: available,\n          selected: dice.status === \"kept\" || toKeep.includes(index),\n          disabled: !available && dice.status !== \"kept\",\n          toggle: () => toggle(index),\n        };\n      })}\n      footer={\n        <Button type=\"primary\" onClick={() => onFinish(toKeep)}>\n          Continue\n        </Button>\n      }\n    />\n  );\n};\n\nexport default KeepExplosions;\n","import React from \"react\";\nimport DicesBox from \"./DicesBox\";\n\nconst Kept = ({ dices, trulyCompromised }) => {\n  const text = trulyCompromised\n    ? \"You cannot keep any dice due to being compromised.\"\n    : \"You have kept:\";\n\n  return (\n    <DicesBox\n      text={text}\n      dices={dices.map((dice) => {\n        const selected = dice.status === \"kept\";\n        return {\n          ...dice,\n          disabled: !selected,\n          selected,\n        };\n      })}\n    />\n  );\n};\n\nexport default Kept;\n","import React from \"react\";\nimport { Typography, List } from \"antd\";\n\nconst { Text } = Typography;\n\nconst Result = ({ dices, tn }) => {\n  const data = [\n    {\n      type: \"Successes\",\n      count: dices.reduce(\n        (acc, dice) =>\n          acc + (dice.value.explosion || 0) + (dice.value.success || 0),\n        0\n      ),\n      target: tn,\n    },\n    {\n      type: \"Strifes\",\n      count: dices.reduce((acc, dice) => acc + (dice.value.strife || 0), 0),\n    },\n    {\n      type: \"Opportunities\",\n      count: dices.reduce(\n        (acc, dice) => acc + (dice.value.opportunity || 0),\n        0\n      ),\n    },\n  ];\n\n  return (\n    <List\n      grid={{ gutter: 16, column: 3 }}\n      dataSource={data}\n      renderItem={({ type, count, target }) => (\n        <List.Item>\n          <Text\n            strong\n            type={target && (count >= target ? \"success\" : \"warning\")}\n          >{`${type}: ${count}`}</Text>\n          {target && <Text>{` (required: ${target})`}</Text>}\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport DicesBox from \"./DicesBox\";\nimport { Button } from \"antd\";\n\nconst Distinction = ({ dices, onFinish }) => {\n  const [toReroll, setToReroll] = useState([]);\n  const max = 2;\n  const toggle = (index) => {\n    if (toReroll.includes(index)) {\n      return setToReroll(toReroll.filter((i) => i !== index));\n    }\n    return setToReroll([...toReroll, index]);\n  };\n\n  return (\n    <DicesBox\n      text={`You can choose up to ${max} dices to reroll.`}\n      dices={dices.map((dice, index) => {\n        const selected = toReroll.includes(index);\n        const selectable = selected || toReroll.length < max;\n        return {\n          ...dice,\n          selectable,\n          selected,\n          disabled: !selectable,\n          toggle: () => toggle(index),\n        };\n      })}\n      footer={\n        <Button type=\"primary\" onClick={() => onFinish(toReroll)}>\n          Continue\n        </Button>\n      }\n    />\n  );\n};\n\nexport default Distinction;\n","import React, { useState } from \"react\";\nimport DicesBox from \"./DicesBox\";\nimport { Button } from \"antd\";\n\nconst Adversity = ({ dices, onFinish }) => {\n  const [toReroll, setToReroll] = useState([]);\n  const successDices = dices.filter(\n    ({ value }) => value.success || value.explosion\n  );\n  const max = 2;\n  const min = Math.min(max, successDices.length);\n  const toggle = (index) => {\n    if (toReroll.includes(index)) {\n      return setToReroll(toReroll.filter((i) => i !== index));\n    }\n    return setToReroll([...toReroll, index]);\n  };\n\n  return (\n    <DicesBox\n      text={`You must reroll two success dices (if possible).`}\n      dices={dices.map((dice, index) => {\n        const selected = toReroll.includes(index);\n        const isSuccess = dice.value.success || dice.value.explosion;\n        const selectable = isSuccess && (selected || toReroll.length < max);\n        return {\n          ...dice,\n          selectable,\n          selected,\n          disabled: !selectable,\n          toggle: () => toggle(index),\n        };\n      })}\n      footer={\n        toReroll.length >= min && (\n          <Button type=\"primary\" onClick={() => onFinish(toReroll)}>\n            Continue\n          </Button>\n        )\n      }\n    />\n  );\n};\n\nexport default Adversity;\n","import React from \"react\";\nimport styles from \"./index.module.css\";\nimport Intent from \"./Intent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectAll, create, softReset, keep, reroll } from \"./reducer\";\nimport { Button, Card } from \"antd\";\nimport Keep from \"./Keep\";\nimport KeepExplosions from \"./KeepExplosions\";\nimport Kept from \"./Kept\";\nimport Result from \"./Result\";\nimport Distinction from \"./Distinction\";\nimport Adversity from \"./Adversity\";\n\nconst Roller = () => {\n  const roll = useSelector(selectAll);\n  const dispatch = useDispatch();\n\n  const { dices, tn, rerolled, modifier, ring, compromised } = roll;\n\n  const dicesRolled = dices.length > 0;\n  const atLeastOneUnresolvedDice =\n    dicesRolled && dices.some((dice) => dice.status === \"pending\");\n  const keptDices = dices.filter((dice) => dice.status === \"kept\");\n  const atLeastOneKeptDice = keptDices.length > 0;\n  const rerollDone = rerolled || modifier === \"none\";\n  const trulyCompromised =\n    compromised &&\n    dicesRolled &&\n    rerollDone &&\n    !atLeastOneKeptDice &&\n    dices\n      .filter((dice) => dice.status === \"pending\")\n      .every((dice) => dice.value.strife);\n  const completed =\n    (atLeastOneKeptDice && !atLeastOneUnresolvedDice) || trulyCompromised;\n\n  return (\n    <div className={styles.layout}>\n      <Card>\n        <Intent\n          completed={dicesRolled}\n          onFinish={(data) => dispatch(create({ ...roll, ...data }))}\n          values={roll}\n        />\n        {dicesRolled && (\n          <>\n            {!rerollDone && (\n              <>\n                {modifier === \"distinction\" && (\n                  <Distinction\n                    dices={dices}\n                    onFinish={(data) => dispatch(reroll(roll, data))}\n                  />\n                )}\n                {modifier === \"adversity\" && (\n                  <Adversity\n                    dices={dices}\n                    onFinish={(data) => dispatch(reroll(roll, data))}\n                  />\n                )}\n              </>\n            )}\n            {rerollDone && (\n              <>\n                {!trulyCompromised && atLeastOneUnresolvedDice && (\n                  <>\n                    {!atLeastOneKeptDice && (\n                      <Keep\n                        dices={dices}\n                        max={ring}\n                        onFinish={(data) => dispatch(keep(roll, data))}\n                        compromised={compromised}\n                      />\n                    )}\n                    {atLeastOneKeptDice && (\n                      <KeepExplosions\n                        dices={dices}\n                        onFinish={(data) => dispatch(keep(roll, data))}\n                        compromised={compromised}\n                      />\n                    )}\n                  </>\n                )}\n                {completed && (\n                  <>\n                    <Kept dices={dices} trulyCompromised={trulyCompromised} />\n                    <Result dices={keptDices} tn={tn} />\n                    <Button\n                      type=\"primary\"\n                      onClick={() => dispatch(softReset())}\n                    >\n                      Reroll\n                    </Button>\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default Roller;\n","import React from \"react\";\nimport \"./App.css\";\nimport Roller from \"./features/roller\";\n\nconst App = () => {\n  return <Roller />;\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rollerReducer from \"../features/roller/reducer\";\n\nexport default configureStore({\n  reducer: {\n    roll: rollerReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dice\":\"Dices_dice__cqowQ\",\"selectable\":\"Dices_selectable__2UH3q\",\"selected\":\"Dices_selected__1Gb1I\",\"unselectable\":\"Dices_unselectable__KQSGp\",\"rerolled\":\"Dices_rerolled__2e0qS\"};"],"sourceRoot":""}